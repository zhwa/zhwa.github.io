<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Zhe Wang</title><link>/</link><description></description><atom:link href="/feeds%5Czhe-wang.rss.xml" rel="self"></atom:link><lastBuildDate>Thu, 16 Oct 2014 00:00:00 +0200</lastBuildDate><item><title>Statsmodels.py (1)</title><link>/statsmodelspy-1.html</link><description>&lt;h3&gt;The Statsmodels&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/statsmodels/statsmodels/"&gt;Statsmodels&lt;/a&gt; is a Python package that provides basic functions in descriptive statistics, estimation and inferences. This package has a rely upon the &lt;a href="https://www.scipy.org"&gt;Scipy&lt;/a&gt; libraries. It also needs the &lt;a href="https://pandas.pydata.org/"&gt;Pandas&lt;/a&gt; for some modules to work.&lt;/p&gt;
&lt;p&gt;Unlike &lt;a href="http://scikit-learn.org/stable/"&gt;Scikit-learn&lt;/a&gt;, Statsmodels is not designed for Machine Learning purposes, although many of its features (especially regression models) can benefit such applications. The users may also find Statsmodels shares some similarities with &lt;a href="www.r-project.org"&gt;R&lt;/a&gt;, yet this package is still undergoing development, and far from replacing R in every scenario.&lt;/p&gt;
&lt;p&gt;The merits of Statsmodels lie in that it provides a convenient way to carry out fundamental statistical tasks in an elegant language, without extra effort in learning another tools. Cooperations with Scipy and Pandas are also simple to carry out.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Zhe Wang</dc:creator><pubDate>Thu, 16 Oct 2014 00:00:00 +0200</pubDate><guid>tag:,2014-10-16:statsmodelspy-1.html</guid></item><item><title>About Me</title><link>/about-me.html</link><description>&lt;h3&gt;Zhe Wang&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;PhD Student at Department of Electrical and Computer Engineering, Michigan State University&lt;/p&gt;
&lt;p&gt;Email: wangzh34@msu.edu&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Zhe Wang</dc:creator><pubDate>Sun, 05 Oct 2014 00:00:00 +0200</pubDate><guid>tag:,2014-10-05:about-me.html</guid></item><item><title>Simple steps to a personal blog</title><link>/simple-steps-to-a-personal-blog.html</link><description>&lt;p&gt;This personal blog is constructed on the following components:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs.getpelican.com"&gt;Pelican&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/markdown-basics/"&gt;Markdown&lt;/a&gt;    &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some more details could be found in the homepage of the aforementioned projects. The following parts provides an initial setup for static personal webpages.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;Why Pelican ?&lt;/h3&gt;
&lt;p&gt;Well, there are certainly many other excellent choices like Jekyll. While for someone with a heavy reliance on Python, Pelican constitutes a better tool.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;Software Setup&lt;/h3&gt;
&lt;p&gt;Before starting, one needs to install Pelican, Markdown and one Markdown Editor. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt;
&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;Markdown&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For MAC users, the best Markdown editor is &lt;a href="http://mouapp.com"&gt;Mou&lt;/a&gt;. For Windows uders, &lt;a href="http://markdownpad.com"&gt;MarkdownPad&lt;/a&gt; is perhaps the most siutable one.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;Simple Steps&lt;/h3&gt;
&lt;p&gt;To start, make one working directory for the blog, and generate the fundamental structures with Pelican Quick Start:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="n"&gt;blog&lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;blog&lt;/span&gt;
&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;quickstart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now a series of files and folders are generated. Now set up a repository on Github with the name username.github.io . Clone this repository in the "output" directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//github.com/username/username.github.io.git&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Write your articles in the "content" directory with the Markdown editor. Go back to the main working directory and prepare to publish them:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;pelican&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;pelicanconf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The final steps would be add/commit/push all files to Github:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;commit&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;am&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Your Commit Message&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//github.com/username/username.github.io.git&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The last step could be changed if Git has been configured properly:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt; &lt;span class="n"&gt;origin&lt;/span&gt; &lt;span class="n"&gt;master&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;p&gt;Open https://username.github.io in your browser, and your personal blog will be shown.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Zhe Wang</dc:creator><pubDate>Sat, 04 Oct 2014 00:00:00 +0200</pubDate><guid>tag:,2014-10-04:simple-steps-to-a-personal-blog.html</guid></item></channel></rss>